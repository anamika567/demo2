<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="4" hostname="DESKTOP-9BB5NPN" failures="0" tests="6" name="Test" time="0.559" errors="0" timestamp="2023-04-11T20:52:41 IST">
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@BeforeSuite configDB" time="1.247">
    <failure type="com.mysql.cj.jdbc.exceptions.CommunicationsException" message="Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.">
      <![CDATA[com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:828)
at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:229)
at com.insurance.GenericUtilities.DatabaseUtility.connectToDB(DatabaseUtility.java:18)
at com.insurance.GenericUtilities.BaseClass.configDB(BaseClass.java:34)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:948)
at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:818)
... 26 more
Caused by: java.net.UnknownHostException: No such host is known (rmgtestingserver)
at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(InetAddress.java:933)
at java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1519)
at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:852)
at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1509)
at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1367)
at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1301)
at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:130)
at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
... 29 more
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeSuite configDB -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@BeforeClass configBC" time="-1.681226560928E9">
    <skipped/>
  </testcase> <!-- @BeforeClass configBC -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@BeforeMethod configBM" time="-1.68122656095E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod configBM -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@AfterMethod configAM" time="-1.681226560981E9">
    <skipped/>
  </testcase> <!-- @AfterMethod configAM -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@BeforeMethod configBM" time="-1.681226560983E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod configBM -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@AfterMethod configAM" time="-1.681226561011E9">
    <skipped/>
  </testcase> <!-- @AfterMethod configAM -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@BeforeMethod configBM" time="-1.681226561017E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod configBM -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@AfterMethod configAM" time="-1.681226561034E9">
    <skipped/>
  </testcase> <!-- @AfterMethod configAM -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@AfterClass configAC" time="-1.681226561039E9">
    <skipped/>
  </testcase> <!-- @AfterClass configAC -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@BeforeClass configBC" time="-1.681226561041E9">
    <skipped/>
  </testcase> <!-- @BeforeClass configBC -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@BeforeMethod configBM" time="-1.681226561045E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod configBM -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@AfterMethod configAM" time="-1.681226561056E9">
    <skipped/>
  </testcase> <!-- @AfterMethod configAM -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@BeforeMethod configBM" time="-1.681226561063E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod configBM -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@AfterMethod configAM" time="-1.681226561074E9">
    <skipped/>
  </testcase> <!-- @AfterMethod configAM -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@AfterClass configAC" time="-1.681226561076E9">
    <skipped/>
  </testcase> <!-- @AfterClass configAC -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@BeforeClass configBC" time="-1.68122656108E9">
    <skipped/>
  </testcase> <!-- @BeforeClass configBC -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@BeforeMethod configBM" time="-1.681226561093E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod configBM -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@AfterMethod configAM" time="-1.681226561107E9">
    <skipped/>
  </testcase> <!-- @AfterMethod configAM -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@AfterClass configAC" time="-1.681226561111E9">
    <skipped/>
  </testcase> <!-- @AfterClass configAC -->
  <testcase classname="project_life_insurance.AddPaymentUsingAnnotationTest" name="addPayment" time="0.0">
    <skipped/>
  </testcase> <!-- addPayment -->
  <testcase classname="project_life_insurance.AddPaymentUsingAnnotationTest" name="simple" time="0.0">
    <skipped/>
  </testcase> <!-- simple -->
  <testcase classname="project_life_insurance.AddPaymentUsingAnnotationTest" name="simple2" time="0.0">
    <skipped/>
  </testcase> <!-- simple2 -->
  <testcase classname="project_life_insurance.EditPaymentUsingAnnotationTest" name="editPayment" time="0.0">
    <skipped/>
  </testcase> <!-- editPayment -->
  <testcase classname="project_life_insurance.EditPaymentUsingAnnotationTest" name="simple" time="0.0">
    <skipped/>
  </testcase> <!-- simple -->
  <testcase classname="project_life_insurance.DeletePaymentUsingAnnotationTest" name="deletePayment" time="0.0">
    <skipped/>
  </testcase> <!-- deletePayment -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@BeforeSuite configDB" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite configDB -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@BeforeSuite configDB" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite configDB -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@AfterSuite disconnectDB" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite disconnectDB -->
  <testcase classname="com.insurance.GenericUtilities.BaseClass" name="@AfterSuite disconnectDB" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite disconnectDB -->
</testsuite> <!-- Test -->
